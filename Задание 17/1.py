# 1. Тип 17 № 64902
# Файл содержит последовательность натуральных чисел, не превышающих 100 000.
# Назовём тройкой три идущих подряд элемента последовательности.
# Задание 17
# Определите количество троек, для которых выполняются следующие условия:
# — в тройке есть пятизначные числа, но не все числа в тройке пятизначные;
# — в тройке больше чисел, кратных 3, чем чисел, кратных 5;
# — сумма элементов тройки больше максимального элемента последовательности,
# - запись которого заканчивается на 238. (Гарантируется, что в последовательности есть хотя
# бы один элемент, запись которого заканчивается на 238.)
# В ответе запишите два числа: сначала количество найденных троек,
# затем максимальную величину суммы элементов
# этих троек.


# — в тройке есть пятизначные числа, но не все числа в тройке пятизначные;
def pyatizn(tr):
    count = 0
    for v in tr:
        if len(str(v)) == 5:
            count += 1
    return count == 1 or count == 2


# — в тройке больше чисел, кратных 3, чем чисел, кратных 5;
def kr3kr5(tr):
    count3 = 0
    count5 = 0
    for v in tr:
        if v % 3 == 0:
            count3 += 1
        if v % 5 == 0:
            count5 += 1
    return count3 > count5

# — сумма элементов тройки больше максимального элемента последовательности,
# запись которого заканчивается на 238.
def maxsum(tr, max_element):
    return sum(tr) > max_element

file = open('17.txt')

values = [int(v) for v in file.readlines()]
max238 = -1

for l in values:
    if l % 1000 == 238 and l > max238:
        max238 = l

results = []
for i in range(len(values) - 2):
    cur_tr = [values[i], values[i + 1], values[i + 2]]
    if pyatizn(cur_tr) and kr3kr5(cur_tr) and maxsum(cur_tr, max238):
        results.append(sum(cur_tr))

# print(max238)
# print(values)

print(len(results), max(results))














## Небольшой комментарий, когда 2 различных элемента последовательности в условии задачи
#f2 = open('17.txt')
#
#vals = [int(i) for i in f2.readlines()]
#
#for i in range(len(vals) - 1):
#    for j in range(i + 1, len(vals)):
#        dvoika = [vals[i], vals[j]]
#        print(dvoika)
